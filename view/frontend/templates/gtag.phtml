<?php
/** @var \Taggrs\DataLayer\Block\Gtag $block */
?>
<?php if (!empty($block->getGtmCode())): ?>
    <script>
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
            'https://<?= $block->getGtmUrl(); ?>/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','<?= $block->getGtmCode(); ?>');
    </script>
<?php endif; ?>
<script>

    window.taggrsQuoteData = {};
    window.taggrsCurrency = '<?= $block->getCurrency() ?>';
    window.taggersEventsConfig = <?= $block->getAjaxEventsConfig(); ?>;

    window.taggrsDebugMode = <?= $block->isDebugMode() ? 'true' : 'false' ?>;

    document.addEventListener('DOMContentLoaded', () => {
        taggrsReloadQuoteData();
    });

    const eventTriggeredCounter = {};

    function taggrsReloadQuoteData() {

        return fetch('<?= $block->getUrl('taggrs-datalayer/getquotedata')  ?>')
            .then(response => {
            if (!response.ok) {
                console.warn('GET request failed');
            }
            return response.json()
        })
            .then(data => {
                window.taggrsQuoteData = data;
                console.log('Quote data reloaded');
            })
    }

    function taggrsLoadUserData(callback) {
        return fetch('<?= $block->getUrl('taggrs-datalayer/getuserdata')  ?>')
            .then(response => {
                if (!response.ok) {
                    console.warn('GET request failed');
                }
                return response.json()
            })
            .then(data => {
                window.taggrsUserData = data;
                if (typeof  callback === 'function') {
                    callback(data);
                }
            })
    }


    function taggrsPush(dataLayer, reloadUserData) {

        if (!dataLayer.hasOwnProperty('ecommerce')) {
            return;
        }

        window.dataLayer = window.dataLayer || [];

        if (!dataLayer.hasOwnProperty('ecommerce')) {
            dataLayer.ecommerce = {};
        }

        const userDataEmpty = !dataLayer.ecommerce.hasOwnProperty('user_data')
            || !dataLayer.ecommerce.user_data.hasOwnProperty('email')

        if (userDataEmpty) {
            taggrsLoadUserData((data) => {
                dataLayer.ecommerce.user_data = data;
                window.dataLayer.push(dataLayer);
                if (window.taggrsDebugMode) {
                    console.log(dataLayer);
                }
            });
        } else {
            window.dataLayer.push(dataLayer);
            if (window.taggrsDebugMode) {
                console.log(dataLayer);
            }
        }


    }

    function taggrsAjaxEvent(eventName, callback, limit) {

        if (typeof limit !== "undefined") {
            if (eventTriggeredCounter.hasOwnProperty(eventName) && eventTriggeredCounter[eventName] >= limit ) {
                return;
            }

            if (!eventTriggeredCounter.hasOwnProperty(eventName)) {
                eventTriggeredCounter[eventName] = 1;
            } else {
                eventTriggeredCounter[eventName]++;
            }
        }

        const ajaxBaseUrl = '<?= $block->getUrl('taggrs-datalayer')  ?>';

        return fetch(ajaxBaseUrl + eventName)
            .then(response => {
                if (!response.ok) console.warn('GET request failed');
                return response.json()
            })
            .then(data => {
                taggrsPush(data, false);
                if (typeof callback === 'function') {
                    callback();
                }
            })
            .catch(error => {
                console.log(error);
            })
        ;
    }
</script>
